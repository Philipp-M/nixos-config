#!/usr/bin/env bash

# define colors
#        red       peach     green     blue
colors=("#f38ba8" "#fab387" "#a6e3a1" "#89b4fa")
#        pink      yellow    teal      lavender
dimmed=("#f5c2e7" "#f9e2af" "#94e2d5" "#b4befe")
empty="#313244"

# get initial focused workspace
focusedws=$(xprop -root _NET_CURRENT_DESKTOP | sed "s/_NET_CURRENT_DESKTOP(CARDINAL) = //")

declare -A o=([1]=0 [2]=0 [3]=0 [4]=0 [5]=0 [6]=0 [7]=0 [8]=0 [9]=0 [10]=0)
declare -A monitormap
declare -A workspaces

# set color for each workspace
status() {
  # if [ "${o[$1]}" -eq 1 ]; then
  #   mon=${monitormap[${workspaces[$1]}]}

    if [ "$focusedws" -eq $(expr "$1" - 1) ]; then
      echo -n "${colors[$mon]}"
    else
      echo -n "$empty"
      # echo -n "${dimmed[$mon]}"
    fi
  # else
  #   echo -n "$empty"
  # fi
}

# handle workspace create/destroy
# workspace_event() {
#   o[$1]=$2
#   while read -r k v; do workspaces[$k]="$v"; done < <(hyprctl -j workspaces | gojq -r '.[]|"\(.id) \(.monitor)"')
# }
# handle monitor (dis)connects
# monitor_event() {
#   while read -r k v; do monitormap["$k"]=$v; done < <(hyprctl -j monitors | gojq -r '.[]|"\(.name) \(.id) "')
# }

# get all apps titles in a workspace
# applist() {
#   ws="$1"

#   apps=$(hyprctl -j clients | jaq -jr '.[] | select(.workspace.id == '"$ws"') | .title + "\\n"')
#   echo -En "${apps%"\n"}"
# }

# generate the json for eww
generate() {
  echo -n '['

  for i in {1..9}; do
    # COLOR=$(status $i)
    # if [ $COLOR != $empty ]; then
    echo -n ''"$([ "$i" -eq 1 ] || echo ,)" '{ "number": "'"$(expr $i - 1)"'", "name": "'"$i"'", "color": "'"$(status "$i")"'" }' #, "tooltip": "'$(applist "$i")'" }'
    # fi
  done

  echo ']'
}

# setup

# add monitors
# monitor_event

# add workspaces
# while read -r k v; do workspaces[$k]="$v"; done < <(hyprctl -j workspaces | gojq -r '.[]|"\(.id) \(.monitor)"')

# check occupied workspaces
# for num in "${!workspaces[@]}"; do
#   o[$num]=1
# done
# generate initial widget
generate

# main loop

xprop -root -spy _NET_CURRENT_DESKTOP | while read -r line; do
  focusedws=$(echo $line | sed "s/_NET_CURRENT_DESKTOP(CARDINAL) = //")
  echo $(generate)
done
# socat -u UNIX-CONNECT:/tmp/hypr/"$HYPRLAND_INSTANCE_SIGNATURE"/.socket2.sock - | rg --line-buffered "workspace|mon(itor)?" | while read -r line; do
#   case ${line%>>*} in
#     "workspace")
#       focusedws=${line#*>>}
#       ;;
#     "focusedmon")
#       focusedws=${line#*,}
#       ;;
#     "createworkspace")
#       workspace_event "${line#*>>}" 1
#       ;;
#     "destroyworkspace")
#       workspace_event "${line#*>>}" 0
#       ;;
#     "monitor"*)
#       monitor_event
#       ;;
#   esac
#   GEN=$(generate)
#   # echo $GEN >> /tmp/qorks
#   echo $GEN
# done
